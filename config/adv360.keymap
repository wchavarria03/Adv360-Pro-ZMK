#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        hyper: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;
        };

        hyp_1: hyp_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hyper &kp NUMBER_1>;
            label = "HYP_1";
        };

        hyp_2: hyp_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hyper &kp NUMBER_2>;
            label = "HYP_2";
        };

        hyp_3: hyp_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hyper &kp NUMBER_3>;
            label = "HYP_3";
        };

        hyp_4: hyp_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&hyper &kp NUMBER_4>;
            label = "HYP_4";
        };

        test: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp W &kp SPACE &kp T &kp Y &kp P &kp E &kp SPACE &kp S &kp O &kp M &kp E &kp T &kp H &kp I &kp N &kp G &kp DOT &kp DOT &kp DOT>;

            label = "TEST";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL      &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                        &mo 3        &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB        &kp Q      &kp W     &kp E     &kp R      &kp T   &test                                                         &none        &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&mt LCTRL ESC  &kp A      &kp S     &kp D     &lt 1 F    &kp G   &none     &kp LALT       &kp LCTRL      &kp LGUI   &kp ESC    &none        &kp H   &kp J   &kp K      &kp L     &kp SEMI  &mt RCTRL SQT
&kp LSHFT      &kp Z      &kp X     &kp C     &kp V      &kp B                            &none          &kp PG_UP                          &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2          &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp LGUI  &kp BACKSPACE  &kp END        &kp PG_DN  &kp ENTER  &lt 2 SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans     &kp A      &kp S     &kp D     &trans     &kp G   &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                   &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans     &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2    &kp F3      &kp F4    &kp F5    &kp F6     &trans                                      &trans  &kp F7     &kp F8        &kp F9          &kp F10          &kp F11    &kp F12
&trans  &kp EXCL  &kp AT      &kp LBRC  &kp RBRC  &kp PIPE   &trans                                      &trans  &trans     &trans        &trans          &trans           &kp ASTRK  &trans
&trans  &kp AMPS  &kp DOLLAR  &kp LPAR  &kp RPAR  &kp GRAVE  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT   &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans
&trans  &kp HASH  &kp CARET   &kp LBKT  &kp RBKT  &kp TILDE                  &trans      &trans                  &kp UNDER  &kp MINUS     &kp EQUAL       &kp PERCENT      &trans     &trans
&trans  &trans    &trans      &trans    &trans               &trans  &trans  &trans      &trans  &trans  &trans             &trans        &trans          &trans           &trans     &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
